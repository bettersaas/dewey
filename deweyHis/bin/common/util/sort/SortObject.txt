按照lastName优先，firstName其次的原则

import java.util.*;

public class Sort2 {
    public static void main(String[] args) {
        ArrayList<Name> name = new ArrayList<Name>();
        name.add(new Name("John", "Lennon"));
        name.add(new Name("Karl", "Marx"));
        name.add(new Name("Groucho", "Marx"));
        name.add(new Name("Oscar", "Grouch"));
        Collections.sort(name, new Name(new String(), new String()));
        for (Name i : name)
            System.out.println(i.toString());
    }
}

class Name implements Comparator<Name> {
    public String firstName, lastName;

    public Name(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    public int compare(Name n1, Name n2) {
        int Cmp = n1.lastName.compareTo(n2.lastName);
        return (Cmp != 0 ? Cmp : (n2.firstName).compareTo(n1.firstName));
    }

    public String toString() { 
        return firstName + " " + lastName;
    }
}输出结果为：
Oscar Grouch
John Lennon
Karl Marx
Groucho Marx（G<L<M     当M相等时，K<G，所以得此输出）对于这种方式，我觉得应该会有更简洁的方式，尤其是对于
Collections.sort(name, new Name(new String(), new String()));